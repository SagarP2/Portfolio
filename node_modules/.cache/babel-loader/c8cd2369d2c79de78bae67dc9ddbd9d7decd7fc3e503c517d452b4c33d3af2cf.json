{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sagar Panchal\\\\Downloads\\\\Portfolio New\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { refreshSession } from '../utils/sessionUtils';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${props => props.theme.colors.darkBackground};\n`;\n_c = LoadingContainer;\nconst Spinner = styled(motion.div)`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: 3px solid rgba(255, 255, 255, 0.1);\n  border-top: 3px solid ${props => props.theme.colors.primary};\n`;\n_c2 = Spinner;\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    loading\n  } = useAuth();\n  const location = useLocation();\n\n  // Refresh session when entering protected routes\n  useEffect(() => {\n    if (isAuthenticated()) {\n      refreshSession();\n    }\n  }, [isAuthenticated]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingContainer, {\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animate: {\n          rotate: 360\n        },\n        transition: {\n          duration: 1,\n          repeat: Infinity,\n          ease: \"linear\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isAuthenticated()) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/admin/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"dmRox+ejahYJ8IeunVCfjq6qTMw=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c3 = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoadingContainer\");\n$RefreshReg$(_c2, \"Spinner\");\n$RefreshReg$(_c3, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","Navigate","useLocation","useAuth","refreshSession","styled","motion","jsxDEV","_jsxDEV","LoadingContainer","div","props","theme","colors","darkBackground","_c","Spinner","primary","_c2","ProtectedRoute","children","_s","isAuthenticated","loading","location","animate","rotate","transition","duration","repeat","Infinity","ease","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","_c3","$RefreshReg$"],"sources":["C:/Users/Sagar Panchal/Downloads/Portfolio New/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { refreshSession } from '../utils/sessionUtils';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\nconst LoadingContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${props => props.theme.colors.darkBackground};\n`;\n\nconst Spinner = styled(motion.div)`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: 3px solid rgba(255, 255, 255, 0.1);\n  border-top: 3px solid ${props => props.theme.colors.primary};\n`;\n\nconst ProtectedRoute = ({ children }) => {\n  const { isAuthenticated, loading } = useAuth();\n  const location = useLocation();\n  \n  // Refresh session when entering protected routes\n  useEffect(() => {\n    if (isAuthenticated()) {\n      refreshSession();\n    }\n  }, [isAuthenticated]);\n\n  if (loading) {\n    return (\n      <LoadingContainer>\n        <Spinner \n          animate={{ rotate: 360 }}\n          transition={{ \n            duration: 1, \n            repeat: Infinity, \n            ease: \"linear\" \n          }}\n        />\n      </LoadingContainer>\n    );\n  }\n\n  if (!isAuthenticated()) {\n    return <Navigate to=\"/admin/login\" state={{ from: location }} replace />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,gBAAgB,GAAGJ,MAAM,CAACK,GAAG;AACnC;AACA;AACA;AACA;AACA,gBAAgBC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,cAAc;AAC1D,CAAC;AAACC,EAAA,GANIN,gBAAgB;AAQtB,MAAMO,OAAO,GAAGX,MAAM,CAACC,MAAM,CAACI,GAAG,CAAC;AAClC;AACA;AACA;AACA;AACA,0BAA0BC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACI,OAAO;AAC7D,CAAC;AAACC,GAAA,GANIF,OAAO;AAQb,MAAMG,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM;IAAEC,eAAe;IAAEC;EAAQ,CAAC,GAAGpB,OAAO,CAAC,CAAC;EAC9C,MAAMqB,QAAQ,GAAGtB,WAAW,CAAC,CAAC;;EAE9B;EACAF,SAAS,CAAC,MAAM;IACd,IAAIsB,eAAe,CAAC,CAAC,EAAE;MACrBlB,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACkB,eAAe,CAAC,CAAC;EAErB,IAAIC,OAAO,EAAE;IACX,oBACEf,OAAA,CAACC,gBAAgB;MAAAW,QAAA,eACfZ,OAAA,CAACQ,OAAO;QACNS,OAAO,EAAE;UAAEC,MAAM,EAAE;QAAI,CAAE;QACzBC,UAAU,EAAE;UACVC,QAAQ,EAAE,CAAC;UACXC,MAAM,EAAEC,QAAQ;UAChBC,IAAI,EAAE;QACR;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc,CAAC;EAEvB;EAEA,IAAI,CAACb,eAAe,CAAC,CAAC,EAAE;IACtB,oBAAOd,OAAA,CAACP,QAAQ;MAACmC,EAAE,EAAC,cAAc;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEd;MAAS,CAAE;MAACe,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1E;EAEA,OAAOf,QAAQ;AACjB,CAAC;AAACC,EAAA,CA/BIF,cAAc;EAAA,QACmBhB,OAAO,EAC3BD,WAAW;AAAA;AAAAsC,GAAA,GAFxBrB,cAAc;AAiCpB,eAAeA,cAAc;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAA1B,EAAA;AAAA0B,YAAA,CAAAvB,GAAA;AAAAuB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}